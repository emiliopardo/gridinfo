{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/templates/gridinfo.html","webpack:///./src/impl/ol/js/gridinfocontrol.js","webpack:///./src/facade/js/gridinfocontrol.js","webpack:///./src/facade/js/gridinfo.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","GridinfoControl","M","impl","Control","map","html","getMapImpl","values_","target","config","utils","isUndefined","GridinfoImplControl","exception","wfsUrl","wmsUrl","layer","wfsLayer","url","map_","zoom","info","geoJSON","popup","popupInfo","start","totalFeatures","batchsize","limit","selectedFeature","getInfoFeature","getInfoQuery","polygonStyle","style","Polygon","fill","color","opacity","stroke","width","polygonSelectedStyle","vectorLayer","GeoJSON","source","crs","properties","type","features","extract","renderMode","Promise","success","fail","template","compileSync","addEvents","querySelector","control","this","addLayers","on","evt","HOVER_FEATURES","feature","selectedDataShow","LEAVE_FEATURES","setStyle","selectedDataHide","SELECT_FEATURES","COMPLETED","getZoom","selectedGrid","getLoadedGridWMS","getLayers","gridInfoFields","setGridFieldInfo","fieldsFilter","setCQLFieldsFilter","propertyNames","setPropertyNames","bbox","getBbox","bboxFilter","setCQLBboxFiler","encodeURI","incrementalLoad","ADDED_WMS","clear","CLICK","event","getLoadedLayer","infoFeature","mapClick","coord","imageClick","pixel","layerUrl","getImpl","layerName","layerStyle","options","styles","mapBbox","imageSize","getSize","getInfoUrl","x","min","y","max","remote","then","res","myContent","text","search","featureTabOpts","icon","title","content","Popup","panMapIfOutOfView","addTab","addPopup","document","getElementsByClassName","addEventListener","layers","loadedLayer","index","length","WMS","isGridLayer","result","element","wmsLayer","find","fields","getFeatures","wfs","JSON","parse","undefined","Math","wfsFeatures","forEach","f","newFeat","Feature","id","geom","getGeometry","coordinates","setGeometry","push","addFeatures","gridCenter","getPolygonCenter","coordenada_X","coordenada_Y","setInfoTable","setTimeout","geometry","minPointX","minPointY","setInfoPopUp","removePopup","filter","field","minValue","table","getAttribute","Gridinfo","Plugin","controls_","metadata_","api","metadata","control_","panel_","ui","Panel","collapsible","position","TL","className","collapsedButtonClass","tooltip","addControls","addPanels","ADDED_TO_MAP","fire","window","plugin","M$plugin$Gridinfo","M$control$GridinfoControl","M$impl$control$GridinfoControl"],"mappings":"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","file":"gridinfo.ol.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = \"<div id=\\\"div-contenedor\\\" class=\\\"m-control m-container m-gridinfo\\\">\\n  <button id=\\\"ctrlTest\\\" class=\\\"g-cartografia-bandera\\\" title=\\\"AddFeature\\\"></button>\\n</div>\\n\";","/**\n * @module M/impl/control/GridinfoControl\n */\nexport default class GridinfoControl extends M.impl.Control {\n  /**\n   * This function adds the control to the specified map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the plugin\n   * @param {HTMLElement} html of the plugin\n   * @api stable\n   */\n  addTo(map, html) {\n    // super addTo - don't delete\n    super.addTo(map, html);\n  }\n\n  getTarget(map){\n    const olMap = map.getMapImpl();\n    return olMap.values_.target;\n  }\n}\n","/* eslint-disable no-console */\n/**\n * @module M/control/GridinfoControl\n */\n\nimport GridinfoImplControl from 'impl/gridinfocontrol';\nimport template from 'templates/gridinfo';\nexport default class GridinfoControl extends M.Control {\n  /**\n   * @classdesc\n   * Main constructor of the class. Creates a PluginControl\n   * control\n   *\n   * @constructor\n   * @extends {M.Control}\n   * @api stable\n   */\n  constructor(config) {\n    // 1. checks if the implementation can create PluginControl\n    if (M.utils.isUndefined(GridinfoImplControl)) {\n      M.exception('La implementación usada no puede crear controles GridinfoControl');\n    }\n    // 2. implementation of this control\n    const impl = new GridinfoImplControl();\n    super(impl, 'Gridinfo');\n    this.config = config\n    this.wfsUrl = this.config.wfsUrl;\n    this.wmsUrl = this.config.wmsUrl;\n    this.layer = this.config.wfsLayer;\n    this.url = null;\n    this.map_ = this.map\n    this.zoom = this.config.zoom;\n    this.info = this.config.info;\n    this.geoJSON = null;\n    this.popup = null;\n    this.popupInfo = null;\n    this.start = null;\n    this.totalFeatures = null;\n    this.batchsize = 100;\n    this.limit = 1000;\n    this.selectedFeature = null;\n    this.getInfoFeature = null;\n    this.getInfoQuery = false;\n    this.polygonStyle = new M.style.Polygon({\n      fill: {\n        color: '#ffffff',\n        opacity: 0,\n      },\n      stroke: {\n        color: '#cdcdcd',\n        width: 0.1\n      }\n    });\n\n    this.polygonSelectedStyle = new M.style.Polygon({\n      fill: {\n        color: '#FFFFFF',\n        opacity: 0,\n      },\n      stroke: {\n        color: '#FFFF00',\n        width: 4\n      }\n    });\n\n    this.vectorLayer = new M.layer.GeoJSON({\n      name: 'vectorLayer',\n      source: {\n        crs: {\n          properties: {\n            name: 'EPSG:25830'\n          },\n          type: 'name'\n        },\n        features: [],\n        type: 'FeatureCollection'\n      },\n      extract: false,\n    }, {\n    }, {\n      renderMode: 'image'\n    });\n  }\n\n\n  /**\n   * This function creates the view\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the control\n   * @api stable\n   */\n  createView(map) {\n    return new Promise((success, fail) => {\n      const html = M.template.compileSync(template);\n      // Añadir código dependiente del DOM\n      this.addEvents(html);\n      success(html);\n    });\n  }\n\n  /**\n   * This function is called on the control activation\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  activate() {\n    // calls super to manage de/activation\n    super.activate();\n  }\n  /**\n   * This function is called on the control deactivation\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  deactivate() {\n    // calls super to manage de/activation\n    super.deactivate();\n  }\n  /**\n   * This function gets activation button\n   *\n   * @public\n   * @function\n   * @param {HTML} html of control\n   * @api stable\n   */\n  getActivationButton(html) {\n    return html.querySelector('.m-gridinfo button');\n  }\n\n  /**\n   * This function compares controls\n   *\n   * @public\n   * @function\n   * @param {M.Control} control to compare\n   * @api stable\n   */\n  equals(control) {\n    return control instanceof GridinfoControl;\n  }\n\n  // Add your own functions\n\n  addEvents(html) {\n    this.map_.addLayers(this.vectorLayer);\n\n\n    this.vectorLayer.on(M.evt.HOVER_FEATURES, (feature) => {\n      if (!this.getInfoQuery) {\n      this.selectedFeature = feature[0]\n      this.selectedDataShow(feature[0])\n      }\n    });\n\n\n    this.vectorLayer.on(M.evt.LEAVE_FEATURES, (feature) => {\n      if (!this.getInfoQuery) {\n        feature[0].setStyle(this.polygonStyle);\n        this.selectedFeature = null;\n        this.selectedDataHide();\n      }\n    });\n\n    this.vectorLayer.on(M.evt.SELECT_FEATURES, (feature) => {\n      this.getInfoFeature = feature[0];\n      this.getInfoQuery = true;\n      feature[0].setStyle(this.polygonSelectedStyle);\n      this.selectedFeature = feature[0]\n    })\n\n    let zoom;\n    this.map_.on(M.evt.COMPLETED, () => {\n      this.map_.getMapImpl().on('moveend', () => {\n        this.start = 0;\n        this.totalFeatures = 0;\n        zoom = this.map_.getZoom();\n        this.selectedGrid = this.getLoadedGridWMS(this.map_.getLayers());\n        if (zoom >= this.zoom && this.selectedGrid) {\n          this.gridInfoFields = this.setGridFieldInfo(this.selectedGrid)\n          this.fieldsFilter = this.setCQLFieldsFilter(this.gridInfoFields);\n          this.propertyNames = this.setPropertyNames(this.gridInfoFields);\n          this.bbox = this.map_.getBbox();\n          this.bboxFilter = this.setCQLBboxFiler(this.bbox)\n          this.url = encodeURI(this.wfsUrl + 'service=WFS&version=2.0.0&request=GetFeature&typeName=' + this.layer + '&CQL_FILTER=' + this.fieldsFilter + ' AND ' + this.bboxFilter + '&propertyName=' + this.propertyNames + '&outputFormat=application/json');\n          this.incrementalLoad(this.vectorLayer, this.url, this.start, this.batchsize, this.totalFeatures, this.limit);\n        }\n      });\n    });\n\n    this.map_.on(M.evt.ADDED_WMS, () => {\n      this.vectorLayer.clear();\n      this.start = 0;\n      this.totalFeatures = 0;\n      zoom = this.map_.getZoom();\n      this.selectedGrid = this.getLoadedGridWMS(this.map_.getLayers());\n      if (zoom >= this.zoom && this.selectedGrid) {\n        this.gridInfoFields = this.setGridFieldInfo(this.selectedGrid)\n        this.fieldsFilter = this.setCQLFieldsFilter(this.gridInfoFields);\n        this.propertyNames = this.setPropertyNames(this.gridInfoFields);\n        this.bbox = this.map_.getBbox();\n        this.bboxFilter = this.setCQLBboxFiler(this.bbox)\n        this.url = encodeURI(this.wfsUrl + 'service=WFS&version=2.0.0&request=GetFeature&typeName=' + this.layer + '&CQL_FILTER=' + this.fieldsFilter + ' AND ' + this.bboxFilter + '&propertyName=' + this.propertyNames + '&outputFormat=application/json');\n        this.incrementalLoad(this.vectorLayer, this.url, this.start, this.batchsize, this.totalFeatures, this.limit);\n      }\n    })\n\n    this.map_.on(M.evt.CLICK, (event) => {\n      let layer = this.getLoadedLayer(this.map_.getLayers());\n      if (this.selectedFeature) {\n        this.infoFeature = this.selectedFeature;\n        this.infoFeature.setStyle(this.polygonSelectedStyle);\n        this.getInfoQuery=true;\n      }\n      if (layer) {\n        let mapClick = event.coord;\n        let imageClick = event.pixel;\n        let layerUrl = layer.getImpl().url\n        let layerName = layer.name\n        let layerStyle = layer.options.styles\n        let mapBbox = this.map_.getBbox();\n        let imageSize = this.map_.getImpl().map_.getSize()\n        let getInfoUrl = layerUrl + 'request=GetFeatureInfo&service=WMS&version=1.1.1&layers=' + layerName + '&styles=' + layerStyle + '&srs=EPSG:25830&format=image/png&bbox=' + mapBbox.x.min + ',' + mapBbox.y.min + ',' + mapBbox.x.max + ',' + mapBbox.y.max + '&width=' + imageSize[0] + '&height=' + imageSize[1] + '&query_layers=' + layerName + '&info_format=text/html&feature_count=1&x=' + imageClick[0] + '&y=' + imageClick[1] + '&exceptions=application/vnd.ogc.se_xml';\n        M.remote.get(getInfoUrl).then((res) => {\n          let myContent = res.text\n          if (myContent.search('<table ')!=-1){\n            \n            let featureTabOpts = {\n              icon: 'g-cartografia-pin',\n              title: 'Información',\n              content: myContent,\n            };\n            this.popupInfo = new M.Popup({ panMapIfOutOfView: true });\n            this.popupInfo.addTab(featureTabOpts);\n            this.map_.addPopup(this.popupInfo, [mapClick[0], mapClick[1]]);\n  \n            let closePopupButton = document.getElementsByClassName('m-popup-closer')[0]\n            closePopupButton.addEventListener('click',()=>{\n              this.getInfoQuery=false;\n              if(this.getInfoFeature){\n                this.getInfoFeature.setStyle(this.polygonStyle);\n              }\n            })\n          }\n        })\n      }\n    })\n  }\n\n  getLoadedLayer(layers) {\n    let loadedLayer = null\n    for (let index = 0; index < layers.length; index++) {\n      const layer = layers[index];\n      if (layer instanceof M.layer.WMS && this.isGridLayer(layer)) {\n        loadedLayer = layer\n      }\n    }\n    return loadedLayer\n  }\n\n  getLoadedGridWMS(layers) {\n    let selectedGrid = null\n    for (let index = 0; index < layers.length; index++) {\n      const layer = layers[index];\n      if (layer instanceof M.layer.WMS && this.isGridLayer(layer)) {\n        selectedGrid = layer.options.styles\n      }\n    }\n    return selectedGrid\n  }\n\n  isGridLayer(layer) {\n    let result = false;\n    for (let index = 0; index < this.info.length; index++) {\n      const element = this.info[index];\n      if (layer.getImpl().url == this.wmsUrl && layer.name == element.wmsLayer && element.style == layer.options.styles) {\n        // console.log(layer.getImpl().url);\n        // console.log(this.wmsUrl);\n        // console.log(layer.name);\n        // console.log(element.wmsLayer);\n        // console.log(layer.options.styles);\n        // console.log(element.style);\n        result = true\n      }\n    }\n    return result;\n  }\n\n  setGridFieldInfo(selectedGrid) {\n    let find = false\n    let gridInfoFields = null\n    do {\n      for (let index = 0; index < this.info.length; index++) {\n        const element = this.info[index];\n        if (element.style == selectedGrid) {\n          gridInfoFields = element.fields\n        }\n        if (index == this.info.length - 1) {\n          find = true;\n        }\n      }\n    } while (!find);\n    return gridInfoFields\n  }\n\n  incrementalLoad(vectorLayer, url, start, batchsize, totalFeatures, limit) {\n    // Si es la primera ejecucion o si aun no las hemos cargado todas\n    if ((this.totalFeatures == 0) || (this.vectorLayer.getFeatures().length < this.totalFeatures)) {\n      // Para no pasarnos si hay limite definido\n      if (this.start + this.batchsize > this.limit) {\n        this.batchsize = this.limit - this.start;\n      }\n      M.remote.get(url + '&STARTINDEX=' + this.start + '&COUNT=' + this.batchsize).then((res) => {\n        let wfs = JSON.parse(res.text);\n        this.totalFeatures = wfs.totalFeatures;\n        // Si hay limite, tiene preferencia\n        this.totalFeatures = (this.limit === undefined) ? wfs.totalFeatures : Math.min(this.limit, this.totalFeatures);\n        let wfsFeatures = wfs.features;\n        let features = [];\n\n        wfsFeatures.forEach((f) => {\n          // Se combierte de multipolygon a polygon\n          let newFeat = new M.Feature(f.id, f);\n          let geom = newFeat.getGeometry();\n          geom.type = 'Polygon';\n          let coord = geom.coordinates[0];\n          geom.coordinates = coord;\n          newFeat.setGeometry(geom);\n          newFeat.setStyle(this.polygonStyle);\n          features.push(newFeat);\n        });\n\n        this.start = this.start + this.batchsize;\n\n        this.vectorLayer.addFeatures(features);\n        // Si aun faltan features por cargar, iteramos\n        if (this.vectorLayer.getFeatures().length < this.totalFeatures) {\n          this.incrementalLoad(this.vectorLayer, this.url, this.start, this.batchsize, this.totalFeatures, this.limit);\n        }\n      });\n    }\n  }\n\n  setInfoPopUp(feature) {\n\n    let gridCenter = this.getPolygonCenter(feature.getGeometry())\n    let coordenada_X = gridCenter[0];\n    let coordenada_Y = gridCenter[1];\n    let myContent = this.setInfoTable(feature)\n    let featureTabOpts = {\n      icon: 'g-cartografia-pin',\n      title: 'Información',\n      content: myContent,\n    };\n    this.popup = new M.Popup({ panMapIfOutOfView: false });\n    this.popup.addTab(featureTabOpts);\n    setTimeout(() => {\n      this.map_.addPopup(this.popup, [coordenada_X, coordenada_Y]);\n    }, 200);\n\n  }\n\n  getPolygonCenter(geometry) {\n    let minPointX = geometry.coordinates[0][0][0]\n    let minPointY = geometry.coordinates[0][0][1]\n    let maxPointX = geometry.coordinates[0][2][0]\n    let maxPointY = geometry.coordinates[0][2][1]\n    let coor_x = ((maxPointX - minPointX) / 2) + minPointX\n    let coor_y = ((maxPointY - minPointY) / 2) + minPointY\n    return [coor_x, coor_y]\n  }\n\n  selectedDataShow(feature) {\n    feature.setStyle(this.polygonSelectedStyle);\n    this.setInfoPopUp(feature)\n  }\n\n  selectedDataHide() {\n    if (!this.getInfoQuery) {\n      this.map_.removePopup(this.popup)\n    }\n  }\n\n  setCQLBboxFiler(bbox) {\n    return 'BBOX(geom,' + bbox.x.min + ',' + bbox.y.min + ',' + bbox.x.max + ',' + bbox.y.max + ')';\n  }\n\n  setCQLFieldsFilter(gridInfoFields) {\n    let filter = null;\n    for (let index = 0; index < gridInfoFields.length; index++) {\n      const field = gridInfoFields[index];\n      if (index == 0) {\n        filter = field.field + '>' + field.minValue;\n      } else {\n        filter += ' AND ' + field.field + '>' + field.minValue\n      }\n    }\n    return filter\n  }\n\n  setPropertyNames(gridInfoFields) {\n    let properties = null;\n    for (let index = 0; index < gridInfoFields.length; index++) {\n      const field = gridInfoFields[index];\n      if (index == 0) {\n        properties = field.field\n      } else {\n        properties += ',' + field.field\n      }\n    }\n    properties += ',geom'\n    return properties\n  }\n\n  setInfoTable(feature) {\n    let table = '<table class=\"info-table\">'\n    for (let index = 0; index < this.gridInfoFields.length; index++) {\n      const element = this.gridInfoFields[index];\n      table += '<tr><td class=\"info-popup-key\">' + element.title + '</td><td class=\"info-popup-value\">' + feature.getAttribute(element.field) + '</td></tr>';\n    }\n    table += '</table>'\n    return table\n  }\n}\n","/**\n * @module M/plugin/Gridinfo\n */\nimport 'assets/css/gridinfo';\nimport GridinfoControl from './gridinfocontrol';\nimport api from '../../api.json';\n\nexport default class Gridinfo extends M.Plugin {\n  /**\n   * @classdesc\n   * Main facade plugin object. This class creates a plugin\n   * object which has an implementation Object\n   *\n   * @constructor\n   * @extends {M.Plugin}\n   * @param {Object} impl implementation object\n   * @api stable\n   */\n  constructor(config) {\n    super();\n    /**\n     * Facade of the map\n     * @private\n     * @type {M.Map}\n     */\n    this.map_ = null;\n    this.config = config\n\n    /**\n     * Array of controls\n     * @private\n     * @type {Array<M.Control>}\n     */\n    this.controls_ = [];\n\n    /**\n     * Metadata from api.json\n     * @private\n     * @type {Object}\n     */\n    this.metadata_ = api.metadata;\n  }\n\n  /**\n   * This function adds this plugin into the map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map the map to add the plugin\n   * @api stable\n   */\n  addTo(map) {\n    this.control_=new GridinfoControl(this.config)\n    this.controls_.push(this.control_);\n    this.map_ = map;\n    // panel para agregar control - no obligatorio\n    this.panel_ = new M.ui.Panel('panelGridinfo', {\n      collapsible: true,\n      position: M.ui.position.TL,\n      className: 'm-gridinfo',\n      collapsedButtonClass: 'g-cartografia-info',\n      tooltip: 'Consultar Información'\n    });\n    this.panel_.addControls(this.controls_);\n    map.addPanels(this.panel_);\n\n    this.control_.on(M.evt.ADDED_TO_MAP, () => {\n      this.fire(M.evt.ADDED_TO_MAP);\n    });\n  }\n\n  /**\n   * This function gets metadata plugin\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  getMetadata(){\n    return this.metadata_;\n  }\n}\n","import M$plugin$Gridinfo from '/home/epardo/proyectos/gridinfo/src/facade/js/gridinfo';\nimport M$control$GridinfoControl from '/home/epardo/proyectos/gridinfo/src/facade/js/gridinfocontrol';\nimport M$impl$control$GridinfoControl from '/home/epardo/proyectos/gridinfo/src/impl/ol/js/gridinfocontrol';\n\nif (!window.M.plugin) window.M.plugin = {};\nif (!window.M.control) window.M.control = {};\nif (!window.M.impl) window.M.impl = {};\nif (!window.M.impl.control) window.M.impl.control = {};\nwindow.M.plugin.Gridinfo = M$plugin$Gridinfo;\nwindow.M.control.GridinfoControl = M$control$GridinfoControl;\nwindow.M.impl.control.GridinfoControl = M$impl$control$GridinfoControl;\n"],"sourceRoot":""}